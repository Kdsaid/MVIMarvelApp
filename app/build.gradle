plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.jarroyo.mvimarvelapp"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            it.buildConfigField "String", "API_KEY", keys.apiKey
            it.buildConfigField "String", "API_PRIVATE_KEY", keys.apiPrivateKey
            buildConfigField "String", "BASE_URL", "\"https://gateway.marvel.com:443/v1/public/\""
        }
        release {
            it.buildConfigField "String", "API_KEY", keys.apiKey
            it.buildConfigField "String", "API_PRIVATE_KEY", keys.apiPrivateKey
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled = true
    }
    buildFeatures {
        viewBinding true
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    def hilt_viewmodels = "1.0.0-alpha02"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodels"
    kapt "androidx.hilt:hilt-compiler:$hilt_viewmodels"

    // Coroutines
    def coroutines_version = "1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-savedstate:2.2.0'

    def kotlin_ktx = "1.7.0"
    implementation "androidx.core:core-ktx:$kotlin_ktx"

    def fragment_ktx = "1.4.0"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.0"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_ktx"

    // Picasso
    def picasso_version = "2.5.2"
    implementation "com.squareup.picasso:picasso:$picasso_version"

    // Retrofit
    def retrofit = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:2.8.1"
    implementation("com.squareup.okhttp3:okhttp:4.9.0")

    // Moshi
    implementation 'com.squareup.moshi:moshi:1.12.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.12.0'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.12.0'
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.5.30"


    // Room
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // Tests
    def mockk_version = "1.12.0"
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
}